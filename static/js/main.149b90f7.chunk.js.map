{"version":3,"sources":["searchHelper.ts","SearchLink.tsx","centuryFilter.tsx","PersonLink.tsx","PersonRow.tsx","SortLink.tsx","PeoplePage.tsx","api.ts","Home.tsx","NotFoundPage.tsx","Header.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","AVAILABLE_CENTURIES","CenturyFilter","centuries","getAll","className","map","century","classNames","includes","filter","c","length","PersonLink","person","useLocation","style","color","sex","pathname","slug","name","PersonRow","born","died","mother","fontWeight","motherName","father","fatherName","SortLink","field","sortField","get","isReversed","sort","order","PeoplePage","personSlug","useParams","useState","people","setPeople","setSearchParams","query","useEffect","fetch","then","result","json","peopleFromServer","preparedPeople","p","assign","find","m","f","visiblePeople","Math","ceil","getCentury","lowerQuery","toLocaleLowerCase","join","a","b","localeCompare","reverse","type","placeholder","onChange","event","target","backgroundColor","Home","NotFoundPage","getActiveClass","status","isActive","Header","location","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.149b90f7.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null;\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(currentParams.toString());\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n        value.forEach(part => newParams.append(key, part));\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from './searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({ children, params, ...props }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from './SearchLink';\n\nconst AVAILABLE_CENTURIES = ['16', '17', '18', '19', '20'];\n\nexport const CenturyFilter = () => {\n  const [searchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries');\n\n  return (\n    <div className=\"level is-flex-grow-1 is-mobile\">\n      <div className=\"level-left\">\n        {AVAILABLE_CENTURIES.map(century => (\n          <SearchLink\n            key={century}\n            className={classNames('button', 'mr-1', {\n              'is-info': centuries.includes(century),\n            })}\n            params={{\n              centuries: centuries.includes(century)\n                ? centuries.filter(c => c !== century)\n                : [...centuries, century],\n            }}\n          >\n            {century}\n          </SearchLink>\n        ))}\n      </div>\n\n      <div className=\"level-right ml-4\">\n        <SearchLink\n          params={{ centuries: null }}\n          className={classNames('button', 'is-success', {\n            'is-outlined': centuries.length > 0,\n          })}\n        >\n          All\n        </SearchLink>\n      </div>\n    </div>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport { Person } from './types/Person';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { search } = useLocation();\n\n  return (\n    <Link\n      style={{\n        color: person.sex === 'm' ? 'rgb(0, 71, 171)' : 'rgb(255, 0, 0)',\n      }}\n      to={{\n        pathname: `/people/${person.slug}`,\n        search,\n      }}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { PersonLink } from './PersonLink';\nimport { Person } from './types/Person';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  return (\n    <>\n      <th>\n        <PersonLink person={person} />\n      </th>\n      <th>{person.sex}</th>\n      <th>{person.born}</th>\n      <th>{person.died}</th>\n      <th>\n        {person.mother\n          ? (\n            <PersonLink person={person.mother} />\n          )\n          : (\n            <p\n              style={{\n                fontWeight: 'bold',\n              }}\n            >\n              {person.motherName}\n            </p>\n          )}\n      </th>\n      <th>\n        {person.father\n          ? (\n            <PersonLink person={person.father} />\n          )\n          : (\n            <p\n              style={{\n                fontWeight: 'bold',\n              }}\n            >\n              {person.fatherName}\n            </p>\n          )}\n      </th>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  field: string,\n};\n\nexport const SortLink: React.FC<Props> = ({ field }) => {\n  const [searchParams] = useSearchParams();\n  const sortField = searchParams.get('sort') || '';\n  const isReversed = searchParams.get('order') === 'desc';\n\n  const params = {\n    sort: (field === sortField && isReversed) ? null : field,\n    order: (field === sortField && !isReversed) ? 'desc' : null,\n  };\n\n  return (\n    <SearchLink params={params}>\n      <span className=\"icon\">\n        <i\n          className={classNames('fas', {\n            'fa-sort': sortField !== field,\n            'fa-sort-up': sortField === field && !isReversed,\n            'fa-sort-down': sortField === field && isReversed,\n          })}\n        />\n      </span>\n    </SearchLink>\n  );\n};\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport {\n  useParams, useSearchParams,\n} from 'react-router-dom';\nimport { getPeople } from './api';\nimport { CenturyFilter } from './centuryFilter';\nimport { PersonRow } from './PersonRow';\nimport { getSearchWith } from './searchHelper';\nimport { SearchLink } from './SearchLink';\nimport { SortLink } from './SortLink';\nimport { Person } from './types/Person';\n\nexport const PeoplePage: React.FC = () => {\n  const { personSlug } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const sex = searchParams.get('sex');\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('centuries');\n  const sortField = searchParams.get('sort');\n  const isReversed = searchParams.get('order') === 'desc';\n\n  useEffect(() => {\n    getPeople().then(peopleFromServer => {\n      const preparedPeople = peopleFromServer.map(p => ({ ...p }));\n\n      preparedPeople.forEach(person => {\n        Object.assign(person, {\n          mother: preparedPeople.find(m => m.name === person.motherName),\n          father: preparedPeople.find(f => f.name === person.fatherName),\n        });\n      });\n      setPeople(preparedPeople);\n    });\n  }, []);\n\n  let visiblePeople = [...people];\n\n  if (sex) {\n    visiblePeople = visiblePeople.filter(person => person.sex === sex);\n  }\n\n  if (centuries.length > 0) {\n    const getCentury = (person: Person) => {\n      return Math.ceil(person.born / 100);\n    };\n\n    visiblePeople = visiblePeople\n      .filter(person => centuries.includes(getCentury(person).toString()));\n  }\n\n  if (query) {\n    const lowerQuery = query.toLocaleLowerCase();\n\n    visiblePeople = visiblePeople.filter(({ name, motherName, fatherName }) => {\n      return [name, motherName || '', fatherName || '']\n        .join('\\n')\n        .toLocaleLowerCase()\n        .includes(lowerQuery);\n    });\n  }\n\n  if (sortField) {\n    visiblePeople.sort((a, b) => {\n      switch (sortField) {\n        case 'name':\n        case 'sex':\n          return a[sortField].localeCompare(b[sortField]);\n        case 'born':\n        case 'died':\n          return a[sortField] - b[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visiblePeople.reverse();\n  }\n\n  return (\n    <div className=\"People\">\n      <h2 className=\"People\">People page</h2>\n      <div className=\"filter\">\n        <nav className=\"panel\">\n          <p className=\"panel-heading\">\n            Filters\n          </p>\n\n          <p className=\"panel-tabs\">\n            <SearchLink\n              params={{ sex: null }}\n              className={classNames({ 'is-active': !sex })}\n            >\n              All\n            </SearchLink>\n\n            <SearchLink\n              params={{ sex: 'm' }}\n              className={classNames({ 'is-active': sex === 'm' })}\n            >\n              Male\n            </SearchLink>\n\n            <SearchLink\n              params={{ sex: 'f' }}\n              className={classNames({ 'is-active': sex === 'f' })}\n            >\n              Female\n            </SearchLink>\n          </p>\n\n          <div className=\"panel-block\">\n            <p className=\"control has-icons-left\">\n              <input\n                className=\"input\"\n                data-cy=\"filterInput\"\n                type=\"text\"\n                placeholder=\"Search\"\n                value={query}\n                onChange={event => setSearchParams(\n                  getSearchWith(searchParams,\n                    { query: event.target.value || null }),\n                )}\n              />\n              <span className=\"icon is-left\">\n                <i className=\"fas fa-search\" aria-hidden=\"true\" />\n              </span>\n            </p>\n          </div>\n\n          <div className=\"panel-block is-flex-direction-column\">\n            <CenturyFilter />\n          </div>\n\n          <div className=\"panel-block\">\n            <SearchLink\n              className=\"button is-link is-outlined is-fullwidth\"\n              params={{ sex: null, query: null, centuries: null }}\n            >\n              Reset all filters\n            </SearchLink>\n          </div>\n        </nav>\n      </div>\n      <table className=\"PeopleTable Collapse\">\n        <thead>\n          <tr>\n            <th className=\"thead__bold\">\n              Name\n              <SortLink field=\"name\" />\n            </th>\n            <th className=\"thead__bold\">\n              Sex\n              <SortLink field=\"sex\" />\n            </th>\n            <th className=\"thead__bold\">\n              Born\n              <SortLink field=\"born\" />\n            </th>\n            <th className=\"thead__bold\">\n              Died\n              <SortLink field=\"died\" />\n            </th>\n            <th className=\"thead__bold\">Mother</th>\n            <th className=\"thead__bold\">Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visiblePeople.map(person => (\n            <tr\n              key={person.slug}\n              style={{\n                backgroundColor: person.slug === personSlug ? 'aquamarine' : '',\n              }}\n            >\n              <PersonRow\n                person={person}\n              />\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\nexport const BASE_URL\n= 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = (): Promise<Person[]> => {\n  return fetch(BASE_URL).then(result => result.json());\n};\n","export const Home: React.FC = () => (\n  <div className=\"Home People\">\n    <h2>Home page</h2>\n  </div>\n);\n","export const NotFoundPage: React.FC = () => (\n  <div className=\"NotFoundPage People\">\n    <h2>Page not found</h2>\n  </div>\n);\n","import classNames from 'classnames';\nimport { NavLink, useLocation } from 'react-router-dom';\n\ntype Status = { isActive: boolean };\n\nconst getActiveClass = (status: Status) => classNames(\n  'nav-bar-item',\n  'Nav__link',\n  'Nav',\n  { 'has-background-grey-lighter': status.isActive },\n);\n\nexport const Header: React.FC = () => {\n  const location = useLocation();\n\n  return (\n    <header className=\"Header\">\n      <nav className=\"Nav\">\n        <NavLink to=\"/\" className={getActiveClass}>Home</NavLink>\n        <NavLink\n          to={{\n            pathname: '/people',\n            search: location.search,\n          }}\n          className={getActiveClass}\n        >\n          People\n        </NavLink>\n      </nav>\n    </header>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport {\n  Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { PeoplePage } from './PeoplePage';\nimport { Home } from './Home';\nimport { NotFoundPage } from './NotFoundPage';\nimport { Header } from './Header';\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route\n          path=\"/home\"\n          element={<Navigate to=\"/\" />}\n        />\n        <Route path=\"/people\">\n          <Route index element={(<PeoplePage />)} />\n          <Route path=\":personSlug\" element={(<PeoplePage />)} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}